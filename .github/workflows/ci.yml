name: Always be deploying

on:
  pull_request:
    paths-ignore: 
      - 'README.md'
      - '.editorconfig'
  push:
    paths-ignore:
      - 'README.md'
      - '.editorconfig'
    branches:
      - main 
    tags:
      - "*.*.*"

jobs:
  aot-validate:
    runs-on: ${{ matrix.os.runner }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - runner: ubuntu-latest
          folder: linux-x64
          binary: transport-aot-example
        - runner: macos-latest
          folder: osx-arm64
          binary: transport-aot-example
        - runner: windows-latest
          folder: windows-x64
          binary: transport-aot-example.exe
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-dotnet@v4
      with:
        global-json-file: ./global.json

    - name: Publish AOT
      run: dotnet publish examples/transport-aot-example

    - name: ls publish directory
      shell: bash
      run: ls -al ./examples/transport-aot-example/bin/Release/net8.0/${{ matrix.os.folder }}/

    - name: Invoke AOT
      run: ./examples/transport-aot-example/bin/Release/net8.0/${{ matrix.os.folder }}/${{ matrix.os.binary }}

  build:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - run: |
        git fetch --prune --unshallow --tags
        echo exit code $?
        git tag --list

    - uses: actions/setup-dotnet@v4
      with:
        global-json-file: ./global.json
        dotnet-version: |
          6.x
        
    - run: ./build.sh build -s true
      name: Build

    - run: ./build.sh test -s true
      name: Test

    - run: ./build.sh generatepackages -s true
      name: Generate local nuget packages

    - run: ./build.sh validatepackages -s true
      name: "validate *.npkg files that were created"

    - run: ./build.sh generateapichanges -s true
      name: "Inspect public API changes"

    - name: publish canary packages github package repository
      if: github.event_name == 'push' && startswith(github.ref, 'refs/heads')
      shell: bash
      run:  |
          dotnet nuget add source --username USERNAME --password ${{secrets.GITHUB_TOKEN}} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/elastic/index.json"
          until dotnet nuget push 'build/output/*.nupkg' -k ${{secrets.GITHUB_TOKEN}} --skip-duplicate --no-symbols --source "github"; do echo "Retrying"; sleep 1; done;

    # Github packages requires authentication, this is likely going away in the future so for now we publish to feedz.io
    - run: dotnet nuget push 'build/output/*.nupkg' -k ${{secrets.FEEDZ_IO_API_KEY}} -s https://f.feedz.io/elastic/all/nuget/index.json --skip-duplicate --no-symbols
      name: publish canary packages to feedz.io
      if: github.event_name == 'push' && startswith(github.ref, 'refs/heads')

    - run: ./build.sh generatereleasenotes -s true
      name: Generate release notes for tag
      if: github.event_name == 'push' && startswith(github.ref, 'refs/tags')

    - run: ./build.sh createreleaseongithub -s true --token ${{secrets.GITHUB_TOKEN}}
      if: github.event_name == 'push' && startswith(github.ref, 'refs/tags')
      name: Create or update release for tag on github
          
    - run: dotnet nuget push 'build/output/*.nupkg' -k ${{secrets.NUGET_ORG_API_KEY}} -s https://api.nuget.org/v3/index.json --skip-duplicate --no-symbols
      name: release to nuget.org
      if: github.event_name == 'push' && startswith(github.ref, 'refs/tags')
